import sat.
import util.

main =>
  D = read_file_lines().map(process),
  garbage_collect(50000000),
  [N : {N,Ns} in D, go(N,Ns)].sum.println.

go(N,Ns) =>
  L = Ns.len,
  [Add,Mul,Cat] = [1,2,3],
  Ops = new_array(L-1),
  Ops :: 1..3,
  Sums = new_array(L),
  Sums :: 0..N,
  Sums[1] = Ns[1],

  foreach (I in 2..L)
    Ds = floor(log10(Ns[I])+1),
    Sums[I] #= cond(Ops[I-1] #= 1,
      Sums[I-1] + Ns[I],
      cond(Ops[I-1] #= 2, Sums[I-1] * Ns[I], Sums[I-1]*10**Ds + Ns[I]))
  end,
  Sums[L] #= N,

  solve([], [Sums]).

process(L) = R =>
  D = L.split(":"),
  [N, Ns] = D,
  R = {N.to_int, Ns.split.map(to_int)}.
