import planner.
import util.

main =>
  D = read_file_lines().map(process),
  garbage_collect(50000000), % nope
  [N : {N,Xs} in D, plan({N,0,Xs},_,_)].sum.println.

final({N,N,[]}).

action({N,Acc,[X|Xs]}, S1, Action, Cost) ?=>
  Acc <= N,
  member(Action, [add, mul, cat]),
  Acc2 = cond(Action == add,
           Acc + X,
           cond(Action == mul, Acc * X, Acc*10**floor(log10(X)+1) + X)),
  S1 = {N, Acc2, Xs},
  Cost = 1.

process(L) = R =>
  D = L.split(":"),
  [N, Ns] = D,
  R = {N.to_int, Ns.split.map(to_int)}.
